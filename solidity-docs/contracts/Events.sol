// SPDX-License-Identifier: GPL-3.0 

pragma solidity ^0.8.4;


contract ClientReceipt {
    
    event Deposit(
        address indexed _from,
        bytes32 indexed _id,
        uint _value
        );
        
    function deposit(bytes32 _id) public payable {
        /*
        
            Events are emitted using `emit`, followed by the name of the event 
            and the arguments (if any) in parantheses. Any such invocation (even deeply
            nested) can be detected from the JS API by filterin for `Deposit`.
            
        */
        emit Deposit(msg.sender, _id, msg.value);
    }
}

// The use in the JS API is as follows:

/*

var abi = // abi as generated by the compiler // ;
var ClientReceipt = web3.eth.Contract(abi);
var ClientReceipt = ClientReceipt.at("0xABCD..123" // address // );
var depositEvent = ClientReceipt.Deposit();


// watch for changes

depositEvent.watch(function(error, result) {
    
    // result contains non-indexed arguments and topics given to the `Deposit` call.
    if(!error)
        console.log(result);
});

*/
